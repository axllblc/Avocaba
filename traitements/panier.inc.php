<?php

/* üß∫ Gestion du panier ("cabas") */

require_once 'articles.inc.php';

/*
 * Le contenu du panier est enregistr√© dans $_SESSION['Panier'].
 */



// **************
// * Constantes *
// **************

/** Quantit√© maximale pouvant √™tre ajout√©e au panier pour un m√™me article. */
const QUANTITE_MAX = 5;

// Actions sur le panier
const DIMINUER     = 'dec';
const AUGMENTER    = 'inc';
const MODIFIER     = 'set';
const RETIRER      = 'rem';
const VIDER_PANIER = 'emp';



// *************
// * Fonctions *
// *************

// Fonctions de gestion du panier

/**
 * Initialiser le panier dans la session.
 * Cette fonction ne fait rien si le panier est d√©j√† initialis√©.
 * @return void
 */
function initialiserPanier (): void {
  if (!isset($_SESSION)) session_start();
  if (empty($_SESSION['Panier'])) {
    $_SESSION['Panier'] = array();

    $_SESSION['Panier']['IdArticle'] = array();
    $_SESSION['Panier']['Nom'] = array();
    $_SESSION['Panier']['Prix'] = array();
    $_SESSION['Panier']['Unite'] = array();
    $_SESSION['Panier']['PhotoVignette'] = array();
    $_SESSION['Panier']['Qte'] = array();
    $_SESSION['Panier']['Verrouillage'] = false;
  }
}


/**
 * Ajouter un article au panier.
 * Si l'article n'est pas pr√©sent dans le panier, il est ajout√© ; sinon, sa quantit√© est incr√©ment√©e.
 * @param int $idArticle Identifiant de l'article √† ajouter au panier.
 * @return bool Bool√©en indiquant le succ√®s ou non de l'ajout : true si l'article a √©t√© ajout√© ; false en cas d'√©chec
 *              (article inexistant, quantit√© maximale atteinte).
 */
function ajouterArticle (int $idArticle): bool {
  initialiserPanier();

  // Si le panier est verrouill√©, l'ajout n'est pas effectu√©.
  if ( $_SESSION['Panier']['Verrouillage'] ) return false;

  /** Position de l'article dans le panier. */
  $index = array_search($idArticle, $_SESSION['Panier']['IdArticle']);

  // Si l'article n'est pas pr√©sent dans le panier
  if ( $index === false ) {
    // L'article √† ajouter au panier est recherch√© dans la base de donn√©es.
    @$article = rechercherArticle($idArticle, 'idArticle')[0] ?? NULL;

    // Si l'article recherch√© est inexistant, il n'est pas ajout√© au panier.
    if ( empty($article) ) return false;

    // L'article est ajout√© au panier, avec une quantit√© de 1.
    array_push($_SESSION['Panier']['IdArticle'], $idArticle);
    array_push($_SESSION['Panier']['Nom'], $article['Nom']);
    array_push($_SESSION['Panier']['Prix'], $article['Prix']);
    array_push($_SESSION['Panier']['Unite'], $article['Unite']);
    array_push($_SESSION['Panier']['PhotoVignette'], $article['PhotoVignette']);
    array_push($_SESSION['Panier']['Qte'], 1);
  } else {
    // La quantit√© de l'article est incr√©ment√©e, √† condition qu'elle n'exc√®de pas la quantit√© maximale autoris√©e.
    $quantite = &$_SESSION['Panier']['Qte'][$index];
    if ($quantite < QUANTITE_MAX)
      $quantite++;
    else return false;
  }

  return true;
}


/**
 * Retirer un article du panier.
 * @param int $idArticle Identifiant de l'article √† supprimer du panier.
 * @return bool Bool√©en indiquant le succ√®s ou non de la suppression : true si l'article a √©t√© retir√© du panier, false
 *              en cas d'√©chec (article absent du panier).
 */
function supprimerArticle (int $idArticle): bool {
  initialiserPanier();

  // Si le panier est verrouill√©, la suppression n'est pas effectu√©e.
  if ( $_SESSION['Panier']['Verrouillage'] ) return false;

  /** Position de l'article dans le panier. */
  $index = array_search($idArticle, $_SESSION['Panier']['IdArticle']);

  // Si l'article est pr√©sent dans le panier, il est supprim√©
  if ( $index !== false ) {
    // Suppression de l'article du panier
    array_splice($_SESSION['Panier']['IdArticle'], $index, 1);
    array_splice($_SESSION['Panier']['Nom'], $index, 1);
    array_splice($_SESSION['Panier']['Prix'], $index, 1);
    array_splice($_SESSION['Panier']['Unite'], $index, 1);
    array_splice($_SESSION['Panier']['PhotoVignette'], $index, 1);
    array_splice($_SESSION['Panier']['Qte'], $index, 1);

    return true;
  }

  return false;
}


/**
 * Modifier la quantit√© d'un article dans le panier.
 * Si la quantit√© pass√©e en param√®tre est n√©gative ou nulle, alors l'article est retir√© du panier.
 * @param int $idArticle Identifiant de l'article dont la quantit√© doit √™tre modifi√©e.
 * @param int $quantite Quantit√© √† d√©finir, inf√©rieure √† <code>QUANTITE_MAX</code> (inclus).
 * @return bool Bool√©en indiquant le succ√®s ou non de la modification : true si la quantit√© a √©t√© modifi√©e, false en cas
 *              d'√©chec (quantit√© invalide, article absent du panier).
 */
function modifierQteArticle (int $idArticle, int $quantite): bool {
  initialiserPanier();

  // Si le panier est verrouill√©, la modification n'est pas effectu√©e.
  if ( $_SESSION['Panier']['Verrouillage'] ) return false;

  /** Position de l'article dans le panier. */
  $index = array_search($idArticle, $_SESSION['Panier']['IdArticle']);

  // Si l'article est pr√©sent dans le panier, sa quantit√© est modifi√©e
  if ( $index !== false ) {

    if ( $quantite <= 0 ) {
      // Suppression de l'article du panier
      return supprimerArticle($idArticle);
    }

    if ( $quantite <= QUANTITE_MAX ) {
      // Modification de la quantit√©
      $_SESSION['Panier']['Qte'][$index] = $quantite;
      return true;
    }

  }

  return false;
}


/**
 * D√©cr√©menter la quantit√© d'un article dans le panier. L'article est retir√© du panier si sa quantit√© devient nulle.
 * @param int $idArticle Article dont la quantit√© doit √™tre d√©cr√©ment√©e.
 * @return bool Bool√©en indiquant le succ√®s ou non de la modification : true si la quantit√© a √©t√© modifi√©e, false en cas
 *              d'√©chec (article absent du panier).
 */
function diminuerQteArticle (int $idArticle): bool {
  initialiserPanier();

  // Si le panier est verrouill√©, la modification n'est pas effectu√©e.
  if ( $_SESSION['Panier']['Verrouillage'] ) return false;

  /** Position de l'article dans le panier. */
  $index = array_search($idArticle, $_SESSION['Panier']['IdArticle']);

  // Si l'article est pr√©sent dans le panier
  if ($index !== false) {
    // La quantit√© de l'article est d√©cr√©ment√©e.
    $quantite = &$_SESSION['Panier']['Qte'][$index];
    if ($quantite > 1) {
      $quantite--;
      return true;
    } else return supprimerArticle($idArticle);
  }

  return false;
}


/**
 * Obtenir la quantit√© d'un article dans le panier.
 * @param int $idArticle Article dont on souhaite conna√Ætre la quantit√©.
 * @return int Quantit√© de l'article. Vaut 0 si l'article est absent du panier.
 */
function getQteArticle (int $idArticle): int {
  initialiserPanier();

  /** Position de l'article dans le panier. */
  $index = array_search($idArticle, $_SESSION['Panier']['IdArticle']);

  if ($index !== false) {
    return $_SESSION['Panier']['Qte'][$index];
  }

  return 0;
}


/**
 * Calculer le montant total du panier.
 * @return int|float Montant total du panier
 */
function montantPanier (): int|float {
  initialiserPanier();

  $montantPanier = 0;

  foreach ( $_SESSION['Panier']['Prix'] as $key => $prix ) {
    $montantPanier += $prix * $_SESSION['Panier']['Qte'][$key];
  }

  return $montantPanier;
}


/**
 * Calculer le nombre d'articles diff√©rents pr√©sents dans le panier (chaque article pr√©sent dans le panier est compt√©
 * une fois).
 * @return int Nombre d'articles diff√©rents pr√©sents dans le panier
 */
function nbArticles (): int {
  initialiserPanier();

  return count( $_SESSION['Panier']['IdArticle'] );
}


/**
 * Calculer le nombre total d'articles pr√©sents dans le panier (chaque article pr√©sent dans le panier est compt√©
 * <i>n</i> fois, o√π <i>n</i> est la quantit√© de l'article).
 * @return int Nombre total d'articles pr√©sents dans le panier
 */
function nbArticlesTotal (): int {
  initialiserPanier();

  $nbArticles = 0;

  foreach ($_SESSION['Panier']['Qte'] as $qte) {
    $nbArticles += $qte;
  }

  return $nbArticles;
}


/**
 * Supprimer le panier.
 * @return void
 */
function supprimerPanier (): void {
  unset($_SESSION['Panier']);
}



// Actions sur le panier

/**
 * V√©rifier la pr√©sence du param√®tre <code>$_GET['actionPanier']</code> dans la requ√™te et modifier l'√©tat du panier.
 * @return bool Bool√©en indiquant le succ√®s ou non de la modification de l'√©tat du panier
 */
function actionPanier (): bool {
  initialiserPanier();

  $status = false;

  if ( !empty($_GET['actionPanier']) ) {
    switch ($_GET['actionPanier']) {
      case DIMINUER:
        if ( !empty($_GET['id']) && is_numeric($_GET['id']) )
          $status = diminuerQteArticle($_GET['id']);
        break;
      case AUGMENTER:
        if ( !empty($_GET['id']) && is_numeric($_GET['id']) )
          $status = ajouterArticle($_GET['id']);
        break;
      case MODIFIER:
        if ( is_numeric($_GET['id']) && is_numeric($_GET['qte']) )
          $status = modifierQteArticle($_GET['id'], $_GET['qte']);
        break;
      case RETIRER:
        if ( !empty($_GET['id']) && is_numeric($_GET['id']) )
          $status = supprimerArticle($_GET['id']);
        break;
      case VIDER_PANIER:
        supprimerPanier();
        $status = true;
        break;
    }

    /*
     * Si la modification de l'√©tat du panier a fonctionn√©, l'utilisateur est redirig√© vers la m√™me page, afin de
     * supprimer les param√®tres pass√©s dans l'URL.
     * Cela permet d'√©viter des modifications r√©p√©t√©es de l'√©tat du panier si l'utilisateur navigue avec les boutons
     * [Pr√©c√©dent] et [Suivant] du navigateur.
     */
    if ($status) {
      header('Location: ?');
      exit;
    }
  } else $status = true;

  return $status;
}
